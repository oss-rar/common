(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{k5i8:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return s})),a.d(t,"default",(function(){return o}));var n=a("Fcif"),r=a("+I+c"),b=a("/FXl"),l=a("TjRS"),s=(a("aD51"),{});void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/packages/express-logger.mdx"}});var c={_frontmatter:s},i=l.a;function o(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)(i,Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h1",{id:"express---logger-"},"Express - Logger üìï"),Object(b.b)("p",null,"Logging framework, powered by pino."),Object(b.b)("p",null,Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/pinojs/pino"}),Object(b.b)("img",{alt:"powered by pinojs",src:"https://img.shields.io/badge/powered%20by-pino-6A6.svg?style=flat-square"}))),Object(b.b)("h2",{id:"best-practices"},"Best practices"),Object(b.b)("p",null,"Logging is used for gathering information to help maintain a product. Similar to how marketing use tracking services, production teams can make logs to help inform how the product is being used."),Object(b.b)("p",null,"Some good examples of things to log:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"Application errors"),Object(b.b)("li",{parentName:"ul"},"API failures"),Object(b.b)("li",{parentName:"ul"},"Edge case scenarios")),Object(b.b)("h2",{id:"install"},"Install"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sh"}),"npm add @oss-rar/express-logger\nnpm add @types/pino --dev # This is needed to provide type completion\n")),Object(b.b)("h2",{id:"basic-usage"},"Basic usage"),Object(b.b)("p",null,"The simplest way to start logging is by importing the base ",Object(b.b)("inlineCode",{parentName:"p"},"logger"),":"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"import { logger } from '@oss-rar/express-logger'\n\nconst log = logger({ name: 'my:app' })\n\nlog.info('my logging message') // simple string\nlog.info({ status: 400, statusText: 'my message' }) // structured object\nlog.info({ status: 400, statusText: 'my message' }, 'my message') // structured object & string\n")),Object(b.b)("h2",{id:"expressjs-usage"},"ExpressJS usage"),Object(b.b)("p",null,"When running an expressjs server is possible to use the ",Object(b.b)("inlineCode",{parentName:"p"},"@oss-rar/express-logger")," middleware to enhance the ",Object(b.b)("inlineCode",{parentName:"p"},"Request")," with a logger instance."),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"import express from 'express'\nimport { expressLogger, HandlerWithLogger } from '@oss-rar/express-logger'\n\nconst customHandler: HandlerWithLogger = (req, res, next) => {\n  const { log } = req\n  log.info({ subject: 'customHandler' })\n}\n\nconst server = express()\nserver.use(expressLogger({ name: 'my:app' }))\nserver.use('/', customHandler)\n")),Object(b.b)("h2",{id:"levels"},"Levels"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Level"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Value"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"trace"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"10"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"for tracing (more fine-grained)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"debug"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"20"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"for debugging üêõ")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"info"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"30"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"informational messages that highlight the progress of the application")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"warn"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"40"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"events that could cause problems")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"error"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"50"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"error events that might still allow the application to continue running")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fatal"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"60"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"error events that cause the application to stop running")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"silent"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Infinity"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"no output")))),Object(b.b)("h2",{id:"links"},"Links"),Object(b.b)("p",null,Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"http://getpino.io/#/"}),"Pino api")))}void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/packages/express-logger.mdx"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-packages-express-logger-mdx-7aed6e3f55c03a103cd6.js.map