{"version":3,"sources":["webpack:///../src/packages/express-logger.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"mappings":"2OAMaA,G,UAAe,S,iNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,uBAGA,4DACA,qBAAG,6BAAGC,WAAW,KAAQ,CACrB,KAAQ,mCACP,mBAAKC,IAAI,oBAAoBC,IAAI,+EACtC,iBAAQ,CACN,GAAM,kBADR,kBAGA,2NACA,6DACA,sBACE,kBAAIF,WAAW,MAAf,sBACA,kBAAIA,WAAW,MAAf,gBACA,kBAAIA,WAAW,MAAf,wBAEF,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6GAKL,iBAAQ,CACN,GAAM,eADR,eAGA,mFAAkE,0BAAYA,WAAW,KAAvB,UAAlE,KACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,+TAUL,iBAAQ,CACN,GAAM,mBADR,mBAGA,gFAA+D,0BAAYA,WAAW,KAAvB,2BAA/D,8BAAiK,0BAAYA,WAAW,KAAvB,WAAjK,4BACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,iWAcL,iBAAQ,CACN,GAAM,UADR,UAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oCAIF,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,qBAIF,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,0EAIF,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,qCAIF,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4EAIF,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,MAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,4DAIF,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,gBAMN,iBAAQ,CACN,GAAM,SADR,SAGA,qBAAG,6BAAGA,WAAW,KAAQ,CACrB,KAAQ,yBADT,mB,+MAOPJ,EAAWO,gBAAiB","file":"component---src-packages-express-logger-mdx-7aed6e3f55c03a103cd6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/common/common/packages/documentation/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"express---logger-\"\n    }}>{`Express - Logger üìï`}</h1>\n    <p>{`Logging framework, powered by pino.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/pinojs/pino\"\n      }}><img alt=\"powered by pinojs\" src=\"https://img.shields.io/badge/powered%20by-pino-6A6.svg?style=flat-square\" /></a></p>\n    <h2 {...{\n      \"id\": \"best-practices\"\n    }}>{`Best practices`}</h2>\n    <p>{`Logging is used for gathering information to help maintain a product. Similar to how marketing use tracking services, production teams can make logs to help inform how the product is being used.`}</p>\n    <p>{`Some good examples of things to log:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Application errors`}</li>\n      <li parentName=\"ul\">{`API failures`}</li>\n      <li parentName=\"ul\">{`Edge case scenarios`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`npm add @oss-rar/express-logger\nnpm add @types/pino --dev # This is needed to provide type completion\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <p>{`The simplest way to start logging is by importing the base `}<inlineCode parentName=\"p\">{`logger`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import { logger } from '@oss-rar/express-logger'\n\nconst log = logger({ name: 'my:app' })\n\nlog.info('my logging message') // simple string\nlog.info({ status: 400, statusText: 'my message' }) // structured object\nlog.info({ status: 400, statusText: 'my message' }, 'my message') // structured object & string\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"expressjs-usage\"\n    }}>{`ExpressJS usage`}</h2>\n    <p>{`When running an expressjs server is possible to use the `}<inlineCode parentName=\"p\">{`@oss-rar/express-logger`}</inlineCode>{` middleware to enhance the `}<inlineCode parentName=\"p\">{`Request`}</inlineCode>{` with a logger instance.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import express from 'express'\nimport { expressLogger, HandlerWithLogger } from '@oss-rar/express-logger'\n\nconst customHandler: HandlerWithLogger = (req, res, next) => {\n  const { log } = req\n  log.info({ subject: 'customHandler' })\n}\n\nconst server = express()\nserver.use(expressLogger({ name: 'my:app' }))\nserver.use('/', customHandler)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"levels\"\n    }}>{`Levels`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Level`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`trace`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`10`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`for tracing (more fine-grained)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`debug`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`20`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`for debugging üêõ`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`info`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`30`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`informational messages that highlight the progress of the application`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`warn`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`40`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`events that could cause problems`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`error`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`50`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`error events that might still allow the application to continue running`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`fatal`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`60`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`error events that cause the application to stop running`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`silent`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Infinity`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`no output`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"links\"\n    }}>{`Links`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://getpino.io/#/\"\n      }}>{`Pino api`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}